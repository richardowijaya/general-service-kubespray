{"asctime": "2023-05-12 13:30:12,409", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "ddb9b187-759f-40ba-b16f-292958899991", "request": {"method": "GET", "path": "/", "ip": "127.0.0.1"}, "response": {"status": "failed", "status_code": 404, "time_taken": 0.0011427999997977167, "body": {"detail": "Not Found"}}}
{"asctime": "2023-05-12 13:30:27,414", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a4f00442-dd96-4f71-a224-23e02d837438", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0005317000031936914, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-12 13:30:27,859", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "fcf3a2f9-d284-4184-8076-5197c694c62b", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.22524980000162032, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-12 13:31:36,730", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3f8e3176-c269-4d46-b618-af6a48d5f17d", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.14738219999708235, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:36.570000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 1, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:36,800", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "2b750da7-befd-4241-bff9-c19f5500de52", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02926520000619348, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:36.760000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 2, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:36,870", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b19e537a-71f7-41ee-a57c-d3912ac7e858", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025311200006399304, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:36.837000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 3, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:36,937", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b6da0d4b-ca87-494a-985a-a322bffc8ec2", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.021704200000385754, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:36.903000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 4, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,001", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "525e9d36-6c96-4253-8e6a-df1d703ef357", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.023714000009931624, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:36.963000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 5, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,064", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "8d1813cc-e965-415e-b994-5143f2962d3a", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.029787400009809062, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.027000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 6, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,118", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "06fe51c5-480c-43e3-82f3-ee316892450b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.021590100004686974, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.090000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 7, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,180", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3d7e9b12-bd0b-4b8a-9c5f-904ad557e5de", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02381819998845458, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.147000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 8, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,261", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "f82daf30-29b3-4f7f-8786-989ec907c494", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02757210000709165, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.220000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 9, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,356", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "22e98621-e408-4190-a438-b2e5c4cabdef", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03741089999675751, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.313000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 10, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,504", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "d5771048-494a-46d0-be75-d5f6ae2cfa54", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04619999999704305, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.413000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 11, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,641", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "db4ca22b-c96d-4d2c-89cb-83b3a8eb8497", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.05135059999884106, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.560000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 12, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,752", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "db362e51-01c2-42d5-82f3-463e5e36c029", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.031394599995110184, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.707000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 13, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,865", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "af5b3f21-b95b-4d6d-bd51-d2cb5c755307", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.041360499992151745, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.817000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 14, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:37,943", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "34d90302-0cb8-4990-9a9b-cfbf105749eb", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.030399399998714216, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.907000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 15, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,016", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "dbfba664-9632-441f-8148-6f768360d505", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025918400002410635, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:37.983000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 16, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,079", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e5d4265b-a8e0-4294-a7ef-79850d8a40c5", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02477750000252854, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.047000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 17, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,163", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "c0eb690f-3a6d-46f7-8a1c-13ebf136d6ab", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.026658799994038418, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.110000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 18, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,224", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "6cb93309-2a59-44af-ba3e-25ed70d7523c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02132680000795517, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.193000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 19, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,311", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "cc517bbc-7acf-4552-bb9d-bcbe9328219c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.022584600010304712, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.257000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 20, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,378", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "4d6177a3-7e6c-436d-850a-75c3941c957e", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02709760000288952, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.347000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 21, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,453", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "8d477bb7-be9f-4e85-8c1d-ba84d08c844f", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02799570000206586, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.420000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 22, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,529", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "ce1d7cc7-59a0-49c4-b478-f1d8d6c5f386", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.023506700003053993, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.493000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 23, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,621", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0bd2678d-53ea-479b-a7fb-5da4ceef85e8", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04038299999956507, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.570000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 24, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,691", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a36c4594-ab91-43ac-a8f2-3a84c8cd51be", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.024065799996606074, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.660000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 25, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,765", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "6bc47581-d1f5-449a-a4a5-cf8f8bde5dad", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.031483300001127645, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.727000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 26, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,846", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e95955e5-29d8-41a1-bf37-3de9ed86b5c9", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.029231099993921816, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.810000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 27, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,922", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5b1bc6ae-69ea-423d-88de-9cace4a0045b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02433450000535231, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.890000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 28, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:38,990", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "40f89f32-4166-4a90-9feb-b34209f3d032", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025292299993452616, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:38.953000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 29, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,051", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "6d5dbc4f-c1e0-4277-a8ee-a8843ea6d8f5", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02804979999200441, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.017000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 30, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,108", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "4995e0f4-2d2f-4007-b091-ec9a562c6da0", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.021809500001836568, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.077000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 31, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,174", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "54892e9d-1c23-4f25-b08f-2f1bd2506cca", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.021658400000887923, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.143000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 32, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,246", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "62b87a65-759d-4934-ba02-639bf4cc6ba7", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.024525200002244674, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.213000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 33, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,319", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "2a4d8326-675e-4245-95ce-7de0b5a42bd2", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025972000003093854, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.287000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 34, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,371", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "8a2c0d92-f3f6-4409-9b81-c36b3120c6c8", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.019541100002243184, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.343000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 35, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,426", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0f5c5a97-e4c3-4f9e-9d2f-02b5b7b9fa2a", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.022367899990058504, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.397000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 36, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,527", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "92f05b7f-ba7f-4d44-b0f0-2824132e58e5", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.05763739999383688, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.450000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 37, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,649", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3a13375c-f98e-41ec-9350-f0d7acf865f2", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.06496719999995548, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.573000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 38, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,721", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "9b47a957-e25a-447f-99f4-909e40ac6c48", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02360130001034122, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.690000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 39, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,782", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "ccc27192-e7de-4483-ad7e-09d8019f709a", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.023069399991072714, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.753000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 40, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,850", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "33ae018f-8535-44e2-b123-7b864cd6c821", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.026696599990827963, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.817000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 41, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:39,938", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "83dc566a-9484-4b61-8e99-7566d2a333a6", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03806509998685215, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.887000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 42, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,019", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "6a3513f1-1e2f-4c9f-9c80-506b3235a27b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03266810000059195, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:39.977000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 43, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,091", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0a8a775f-471a-434a-99a6-faed04f74278", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.023586699986481108, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.057000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 44, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,176", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "9b56ebbb-8dac-43aa-8f38-8de91f5b80e8", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025558699999237433, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.140000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 45, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,284", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e43616b0-cd82-4fe3-912a-359dd4c51eb1", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04277390000061132, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.237000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 46, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,366", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a7612b75-94a3-45a8-894c-70ca85c1e999", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025777300004847348, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.327000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 47, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,440", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "d271b65f-ec9e-40a5-92bf-d2a001687e07", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.023595500009832904, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.407000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 48, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,542", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5026a053-441a-4d41-bb08-610fabdbb3e5", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.050147100002504885, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.480000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 49, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,635", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0a1aea5f-ea65-483e-9b7a-84764deb0a16", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.0401004000013927, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.587000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 50, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,720", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5aeb2537-67cd-4bce-b5ec-1935c08b24a6", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02646529999037739, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.673000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 51, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,788", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "91aa373e-dc5c-4f47-8d4b-9d310a5ac5c6", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.022884599995450117, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.757000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 52, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,854", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "9e104c3d-4bf2-49b3-997f-9111bf68e725", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02230270000291057, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.823000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 53, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:40,928", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "58f21571-c9c9-4aec-9988-1eaced8a5eed", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.022342199998092838, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.893000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 54, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,029", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "973806ff-f8c2-49b4-8c91-44c84214f54b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.05057409999426454, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:40.970000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 55, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,157", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a718daa9-f795-4840-8af6-f6b68d323a20", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.05167220000294037, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.090000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 56, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,255", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "fe174659-1322-4f0b-bf5d-d78b56e44441", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03244439999980386, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.217000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 57, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,333", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5fce0813-567c-429b-8827-2ed008d4ae94", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.027341299995896406, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.297000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 58, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,424", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0313b645-6489-4d39-962c-fd537dba6062", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.040131100002327, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.373000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 59, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,518", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "f693bed4-87f5-4a13-8082-ad1f3fc33a60", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.031878299996606074, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.473000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 60, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,622", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "da97a4ff-a011-4c3b-9ee1-68f192d916f0", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04842619999544695, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.563000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 61, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,706", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "2bad1065-a89b-44d6-8da8-c27c373d6f1e", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03522780000639614, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.660000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 62, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,810", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "adffb462-0f5d-49af-9df6-30893879e147", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.039831599991885014, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.757000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 63, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:41,925", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "99f18913-641a-470c-81b2-8e448f86b313", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03746510000200942, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.873000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 64, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,020", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e6f0718b-12d6-4c61-b265-37df793c852b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04198290000203997, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:41.970000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 65, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,089", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "914f0b04-8638-46a3-993b-3bd1f1df8b2c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.024707499993382953, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.050000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 66, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,178", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3b219a5d-998f-4b1d-97f5-47c10b75e78e", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.042981399994459935, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.123000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 67, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,377", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "82eb47f2-2697-43fe-8284-307392f00bf3", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04491009999765083, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.330000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 68, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,472", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3d80c402-55ba-4ebd-ae08-6fb13d7314ad", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.028523199987830594, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.427000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 69, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,576", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e2e1cf96-b8c9-4d4e-8d0a-2b1add085088", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.046583699993789196, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.523000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 70, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,689", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3307cf0f-3ab6-4bb4-8a93-81fbbd02a1a8", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04298860000562854, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.637000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 71, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,770", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "de978f30-06cc-40b3-b690-84e3231ab613", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02841850000550039, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.737000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 72, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,856", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3f74fb58-e4a9-4f61-9759-a3cf68e07008", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.032871500006876886, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.820000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 73, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:42,971", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5ded32fa-f708-4510-93c0-d5015bc74415", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.04662929999176413, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:42.917000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 74, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,058", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e99be043-ee6b-47cd-a3af-3866f1d075e4", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.024317199990036897, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.020000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 75, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,155", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "c1ff5e39-831f-4e96-9f2c-41889e4b4b3c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03105969999160152, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.107000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 76, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,255", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a0cae5a1-3634-4fe6-9f71-f1b70788fc5a", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03155189999961294, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.207000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 77, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,350", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "370a2baa-4ae0-458a-9eba-9cdc3b926028", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.029192000001785345, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.307000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 78, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,460", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "d3ee65ab-5a63-4dc7-9662-f75156f1179c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.0349759999953676, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.397000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 79, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,552", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "d56f9f03-13ee-4c90-ab35-eacec1a1cc8c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.025681099999928847, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.513000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 80, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,687", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "7578666e-5005-4a76-bb1b-16c7f2169242", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.05194599999231286, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.623000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 81, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,780", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "fb2fd594-07d2-48d9-bd6f-1707725ebace", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.035009499988518655, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.740000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 82, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,875", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "77113897-432e-4560-96d3-f320709f6b21", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03661909999209456, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.827000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 83, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:43,972", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "ec6c62bd-5891-4453-9d79-b0751fb28994", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.034970600012457, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:43.927000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 84, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,074", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3398ee80-56a4-4baa-be99-60c1aa944255", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03853980000712909, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.023000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 85, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,199", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "87d300a2-f977-487c-aa30-df0a151dbe56", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.032810199991217814, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.123000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 86, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,292", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "27e49521-f416-48af-8541-4f4aea681e0e", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03810999999404885, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.250000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 87, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,390", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "426254fa-b106-41f3-b01a-949c27f95457", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03356619999976829, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.343000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 88, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,471", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "acbc4dc4-5564-4920-b7e1-55c978eca84f", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.027350400006980635, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.433000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 89, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,622", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "c4719dbf-0e36-4021-87e1-7e429e87b9b9", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.08424269998795353, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.523000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 90, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,710", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "266c95d5-85ff-45db-9e74-1bf1d774d675", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.03790209999715444, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.663000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 91, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,787", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b5fd6162-dc98-49b5-ae18-0a88e0d8b923", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.031674500001827255, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.750000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 92, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,847", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "7d32af13-09ac-413d-bbb1-bd7cb11251f9", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.022244399995543063, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.820000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 93, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,901", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b3ef9e39-4430-4121-9eb7-2787d7bef67b", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.019693199996254407, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.873000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 94, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:44,959", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "9676271b-6305-467c-ae94-0894d200d48d", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.01993560000846628, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:44.937000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 95, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:45,035", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b0f18394-ed05-4f29-a1a9-11fa9aed1dce", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.027067999995779246, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:45", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 96, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:45,137", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "654e9bb9-2b30-4043-ae5b-e09465d9a30c", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.049029200003133155, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:45.077000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 97, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:45,211", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e4f7d682-86e3-4833-81fc-5f4e59f604dc", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02761340000142809, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:45.177000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 98, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:45,282", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "4be1ded8-0da9-476e-99aa-14eabc03bd46", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "get-adjustment-reasons", "http_request": "GET", "http_response": "200", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]", "triggered_menu": "get-adjustment-reasons"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02704870000889059, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:31:45.250000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "get-adjustment-reasons", "http_response": "200", "triggered_menu": "get-adjustment-reasons", "ip_address": "127.0.0.1", "logging_id": 99, "created_by": "50650", "changed_by": "0", "http_request": "GET", "data_context": "[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EA9C2E50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39E610>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA910>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EAF4E2D0>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC39DD50>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2E95EA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA750>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FA950>, <models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC4FAAD0>]"}}}}
{"asctime": "2023-05-12 13:31:45,308", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "1ed72e0b-145d-425e-b7a6-46ceae76e7a7", "request": {"method": "GET", "path": "/api/general/get-adjustment-reasons", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 8.825402399990708, "body": {"messages": "Request fulfilled, Here's the response", "payloads": [{"adjustment_reason_id": 2, "adjustment_reason_code": "2", "adjustment_reason_name": "Test", "is_active": true}, {"adjustment_reason_id": 3, "adjustment_reason_code": "5", "adjustment_reason_name": "Test", "is_active": true}, {"adjustment_reason_id": 4, "adjustment_reason_code": "Ta", "adjustment_reason_name": "Ta", "is_active": true}, {"adjustment_reason_id": 6, "adjustment_reason_code": "string", "adjustment_reason_name": "string", "is_active": true}, {"adjustment_reason_id": 10, "adjustment_reason_code": "S", "adjustment_reason_name": "S", "is_active": true}, {"adjustment_reason_id": 12, "adjustment_reason_code": "Asa", "adjustment_reason_name": "Asa", "is_active": true}, {"adjustment_reason_id": 18, "adjustment_reason_code": "set", "adjustment_reason_name": "set", "is_active": true}, {"adjustment_reason_id": 19, "adjustment_reason_code": "saset", "adjustment_reason_name": "saset", "is_active": true}, {"adjustment_reason_id": 20, "adjustment_reason_code": "Ww", "adjustment_reason_name": "Ww", "is_active": false}]}}}
{"asctime": "2023-05-12 13:52:33,847", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "32bdb31e-b0fe-440d-9ab0-24cd273bc2f3", "request": {"method": "POST", "path": "/api/general/create-logging", "ip": "127.0.0.1", "body": {"created_by": "50650", "hitted_api": "create-adjustment-reason", "http_request": "POST", "http_response": "201", "data_context": "<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC50C510>", "triggered_menu": "create-adjustment-reason"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.02823470000294037, "body": {"messages": "Request created", "payloads": {"created_at": "2023-05-12T13:52:33.810000", "changed_at": "1900-01-01T00:00:00", "is_active": true, "hitted_api": "create-adjustment-reason", "http_response": "201", "triggered_menu": "create-adjustment-reason", "ip_address": "127.0.0.1", "logging_id": 100, "created_by": "50650", "changed_by": "0", "http_request": "POST", "data_context": "<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001A2EC50C510>"}}}}
{"asctime": "2023-05-12 13:52:33,879", "process": 21160, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0f23cf76-f680-4ec5-b18b-0d4dc4a3cfc2", "request": {"method": "POST", "path": "/api/general/create-adjustment-reason", "ip": "127.0.0.1", "body": {"adjustment_reason_code": "sans", "adjustment_reason_name": "sans"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.08363320000353269, "body": {"messages": "Request created", "payloads": {"adjustment_reason_id": 23, "adjustment_reason_code": "sans", "adjustment_reason_name": "sans", "is_active": true}}}}
{"asctime": "2023-05-22 14:52:05,838", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "faf537ca-5e53-4eba-be9b-8be1afb3bd96", "request": {"method": "GET", "path": "/", "ip": "127.0.0.1"}, "response": {"status": "failed", "status_code": 404, "time_taken": 0.0014898000008543022, "body": {"detail": "Not Found"}}}
{"asctime": "2023-05-22 14:52:06,004", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0744773a-799d-4ed4-9f02-5b64f7d03181", "request": {"method": "GET", "path": "/favicon.ico", "ip": "127.0.0.1"}, "response": {"status": "failed", "status_code": 404, "time_taken": 0.0018276999981026165, "body": {"detail": "Not Found"}}}
{"asctime": "2023-05-22 14:52:08,458", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "87f771b8-3db5-4b35-8ba6-698694086dd5", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.00028529999690363184, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-22 14:52:09,619", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a1008cce-46d6-4d6c-928c-2f16c65d7549", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.09388960000069346, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-23 10:08:07,085", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "9755b713-adc6-48a8-9ebf-adbc60b27fd9", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.041622800010372885, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-23 10:08:07,719", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e9fd9c3d-a70b-4891-a5e0-7f8aceed5e3b", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.047920900004100986, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-23 11:09:49,783", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "c5d704d5-a81e-4073-ab1a-39288cbd8aef", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.013665000005858019, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-23 11:09:50,605", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "29efad9c-9b8f-4829-8737-3b92e149c337", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.04686770000262186, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-23 11:56:18,845", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "db8dcfd2-1ad7-46bb-88d8-a478313cf03d", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.13308060000417754, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-24 09:15:16,351", "process": 28540, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0a56fd3d-2b68-4a94-b689-480b038ff615", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.05020699999295175, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 09:07:59,942", "process": 25048, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "afecd3b9-bdfb-4778-9e23-455eef6d8257", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0003068000078201294, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 09:08:00,271", "process": 25048, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e5ae1b97-9d19-406b-9207-d849f57fd938", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.08749770000576973, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 09:08:16,665", "process": 25048, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "d8c5d9fb-ea09-4126-9adf-8ab03cecc504", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.00043169999844394624, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 09:08:16,792", "process": 25048, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "7cc1b82c-8983-4e60-834a-1a3c991b7122", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.004768499988131225, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 13:48:40,961", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "815cfffe-5bc0-4f09-b314-38d947588b23", "request": {"method": "GET", "path": "/", "ip": "127.0.0.1"}, "response": {"status": "failed", "status_code": 404, "time_taken": 0.0019926000386476517, "body": {"detail": "Not Found"}}}
{"asctime": "2023-05-25 13:48:44,242", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "0136d858-6e29-499f-80b7-89148b95c24e", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0007066000252962112, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 13:48:44,566", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5f89b524-37a1-45a9-b771-f300aae1916a", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.14463150000665337, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 14:08:01,572", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "489702ae-d7e4-4ecf-b86d-893fd8a5ba94", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.02284950000466779, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 14:08:01,898", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "3b899bdd-7b14-4133-84df-7bdc401be5dc", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.03748130000894889, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 14:08:26,421", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "1c22b8a1-bbae-4474-a511-5e5b62e6dcc1", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0013779000146314502, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 14:08:26,542", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "601682d3-ea65-4451-8823-cef7dc994953", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0048943000147119164, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 14:23:06,515", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "928a42a6-17d4-4c40-bfe5-90367e62cfe1", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0025883999769575894, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 14:23:06,657", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "cf97b2f6-58bb-4f05-a42e-3e42e0e4d5b5", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.006927300011739135, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-05-25 14:23:10,506", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b7bc216c-f05e-45f6-b963-be62efd89226", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0051123000448569655, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-05-25 14:23:10,618", "process": 20860, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "8a8976ca-a4fb-463f-9fe3-1a86bd91ae82", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0043249999871477485, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-06-14 13:47:56,134", "process": 16052, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b3b87de3-4d0b-4367-bbe8-6345a29698e6", "request": {"method": "GET", "path": "/docs", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.0008842000097502023, "body": "[b'\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\">\\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\\n    <title>FastAPI - Swagger UI</title>\\n    </head>\\n    <body>\\n    <div id=\"swagger-ui\">\\n    </div>\\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\"></script>\\n    <!-- `SwaggerUIBundle` is now available on the page -->\\n    <script>\\n    const ui = SwaggerUIBundle({\\n        url: \\'/openapi.json\\',\\n    \"dom_id\": \"#swagger-ui\",\\n\"layout\": \"BaseLayout\",\\n\"deepLinking\": true,\\n\"showExtensions\": true,\\n\"showCommonExtensions\": true,\\noauth2RedirectUrl: window.location.origin + \\'/docs/oauth2-redirect\\',\\n    presets: [\\n        SwaggerUIBundle.presets.apis,\\n        SwaggerUIBundle.SwaggerUIStandalonePreset\\n        ],\\n    })\\n    </script>\\n    </body>\\n    </html>\\n    ']"}}
{"asctime": "2023-06-14 13:47:56,898", "process": 16052, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "e8d4c2a1-cef5-403c-9f38-a42451f49509", "request": {"method": "GET", "path": "/openapi.json", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 0.15629929999704473, "body": {"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/general/get-adjustment-reasons": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reasons", "operationId": "get_adjustment_reasons_api_general_get_adjustment_reasons_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-adjustment-reason/{adjustment_reason_id}": {"get": {"tags": ["Adjustment Reason"], "summary": "Get Adjustment Reason", "operationId": "get_adjustment_reason_api_general_get_adjustment_reason__adjustment_reason_id__get", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-adjustment-reason": {"post": {"tags": ["Adjustment Reason"], "summary": "Post Adjustment Reason", "operationId": "post_adjustment_reason_api_general_create_adjustment_reason_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-adjustment-reason/{adjustment_reason_id}": {"delete": {"tags": ["Adjustment Reason"], "summary": "Delete Adjustment Reason", "operationId": "delete_adjustment_reason_api_general_delete_adjustment_reason__adjustment_reason_id__delete", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-adjustment-reason/{adjustment_reason_id}": {"put": {"tags": ["Adjustment Reason"], "summary": "Put Adjustment Reason", "operationId": "put_adjustment_reason_api_general_update_adjustment_reason__adjustment_reason_id__put", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAdjustmentReasonGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-adjustment-reason/{adjustment_reason_id}": {"patch": {"tags": ["Adjustment Reason"], "summary": "Patch Adjustment Reason", "operationId": "patch_adjustment_reason_api_general_active_adjustment_reason__adjustment_reason_id__patch", "parameters": [{"required": true, "schema": {"title": "Adjustment Reason Id"}, "name": "adjustment_reason_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-after-sales-areas": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Areas", "operationId": "get_after_sales_areas_api_general_get_after_sales_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-after-sales-area/{after_sales_area_id}": {"get": {"tags": ["After Sales Area"], "summary": "Get After Sales Area", "operationId": "get_after_sales_area_api_general_get_after_sales_area__after_sales_area_id__get", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-after-sales-area": {"post": {"tags": ["After Sales Area"], "summary": "Post After Sales Area", "operationId": "post_after_sales_area_api_general_create_after_sales_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-after-sales-area/{after_sales_area_id}": {"delete": {"tags": ["After Sales Area"], "summary": "Delete After Sales Area", "operationId": "delete_after_sales_area_api_general_delete_after_sales_area__after_sales_area_id__delete", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-after-sales-area/{after_sales_area_id}": {"put": {"tags": ["After Sales Area"], "summary": "Put After Sales Area", "operationId": "put_after_sales_area_api_general_update_after_sales_area__after_sales_area_id__put", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAfterSalesAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-after-sales-area/{after_sales_area_id}": {"patch": {"tags": ["After Sales Area"], "summary": "Patch After Sales Area", "operationId": "patch_after_sales_area_api_general_active_after_sales_area__after_sales_area_id__patch", "parameters": [{"required": true, "schema": {"title": "After Sales Area Id"}, "name": "after_sales_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-codes": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Codes", "operationId": "get_approval_codes_api_general_get_approval_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-code/{approval_code_id}": {"get": {"tags": ["Approval Code"], "summary": "Get Approval Code", "operationId": "get_approval_code_api_general_get_approval_code__approval_code_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-code": {"post": {"tags": ["Approval Code"], "summary": "Post Approval Code", "operationId": "post_approval_code_api_general_create_approval_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-code/{approval_code_id}": {"delete": {"tags": ["Approval Code"], "summary": "Delete Approval Code", "operationId": "delete_approval_code_api_general_delete_approval_code__approval_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-code/{approval_code_id}": {"put": {"tags": ["Approval Code"], "summary": "Put Approval Code", "operationId": "put_approval_code_api_general_update_approval_code__approval_code_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-code/{approval_code_id}": {"patch": {"tags": ["Approval Code"], "summary": "Patch Approval Code", "operationId": "patch_approval_code_api_general_active_approval_code__approval_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Code Id"}, "name": "approval_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-approval-spms": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spms", "operationId": "get_approval_spms_api_general_get_approval_spms_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-approval-spm/{approval_spm_id}": {"get": {"tags": ["Approval SPM"], "summary": "Get Approval Spm", "operationId": "get_approval_spm_api_general_get_approval_spm__approval_spm_id__get", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-approval-spm": {"post": {"tags": ["Approval SPM"], "summary": "Post Approval Spm", "operationId": "post_approval_spm_api_general_create_approval_spm_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-approval-spm/{approval_spm_id}": {"delete": {"tags": ["Approval SPM"], "summary": "Delete Approval Spm", "operationId": "delete_approval_spm_api_general_delete_approval_spm__approval_spm_id__delete", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-approval-spm/{approval_spm_id}": {"put": {"tags": ["Approval SPM"], "summary": "Put Approval Spm", "operationId": "put_approval_spm_api_general_update_approval_spm__approval_spm_id__put", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrApprovalSPMGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-approval-spm/{approval_spm_id}": {"patch": {"tags": ["Approval SPM"], "summary": "Patch Approval Spm", "operationId": "patch_approval_spm_api_general_active_approval_spm__approval_spm_id__patch", "parameters": [{"required": true, "schema": {"title": "Approval Spm Id"}, "name": "approval_spm_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area": {"get": {"tags": ["Area"], "summary": "Get All Data", "operationId": "get_all_data_api_general_area_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Area"], "summary": "Create Data", "operationId": "create_data_api_general_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/area/{id}": {"get": {"tags": ["Area"], "summary": "Get By Id", "operationId": "get_by_id_api_general_area__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Area"], "summary": "Update Data", "operationId": "update_data_api_general_area__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrAreaRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Area"], "summary": "Delete Data", "operationId": "delete_data_api_general_area__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-bank-account-types": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Types", "operationId": "get_bank_account_types_api_general_get_bank_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-bank-account-type/{bank_account_type_id}": {"get": {"tags": ["Bank Account Type"], "summary": "Get Bank Account Type", "operationId": "get_bank_account_type_api_general_get_bank_account_type__bank_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-bank-account-type": {"post": {"tags": ["Bank Account Type"], "summary": "Post Bank Account Type", "operationId": "post_bank_account_type_api_general_create_bank_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-bank-account-type/{bank_account_type_id}": {"delete": {"tags": ["Bank Account Type"], "summary": "Delete Bank Account Type", "operationId": "delete_bank_account_type_api_general_delete_bank_account_type__bank_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-bank-account-type/{bank_account_type_id}": {"put": {"tags": ["Bank Account Type"], "summary": "Put Bank Account Type", "operationId": "put_bank_account_type_api_general_update_bank_account_type__bank_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBankAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-bank-account-type/{bank_account_type_id}": {"patch": {"tags": ["Bank Account Type"], "summary": "Patch Bank Account Type", "operationId": "patch_bank_account_type_api_general_active_bank_account_type__bank_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Bank Account Type Id"}, "name": "bank_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-billable-tos": {"get": {"tags": ["Billable To"], "summary": "Get Billables To", "operationId": "get_billables_to_api_general_get_billable_tos_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-billable-to/{billable_to_id}": {"get": {"tags": ["Billable To"], "summary": "Get Billable To", "operationId": "get_billable_to_api_general_get_billable_to__billable_to_id__get", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-billable-to": {"post": {"tags": ["Billable To"], "summary": "Post Billable To", "operationId": "post_billable_to_api_general_create_billable_to_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-billable-to/{billable_to_id}": {"delete": {"tags": ["Billable To"], "summary": "Delete Billable To", "operationId": "delete_billable_to_api_general_delete_billable_to__billable_to_id__delete", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-billable-to/{billable_to_id}": {"put": {"tags": ["Billable To"], "summary": "Put Billable To", "operationId": "put_billable_to_api_general_update_billable_to__billable_to_id__put", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBillableToGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-billable-to/{billable_to_id}": {"patch": {"tags": ["Billable To"], "summary": "Patch Billable To", "operationId": "patch_billable_to_api_general_active_billable_to__billable_to_id__patch", "parameters": [{"required": true, "schema": {"title": "Billable To Id"}, "name": "billable_to_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-brand-types": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Types", "operationId": "get_brand_types_api_general_get_brand_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-brand-type/{brand_type_id}": {"get": {"tags": ["Brand Type"], "summary": "Get Brand Type", "operationId": "get_brand_type_api_general_get_brand_type__brand_type_id__get", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-brand-type": {"post": {"tags": ["Brand Type"], "summary": "Post Brand Type", "operationId": "post_brand_type_api_general_create_brand_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-brand-type/{brand_type_id}": {"delete": {"tags": ["Brand Type"], "summary": "Delete Brand Type", "operationId": "delete_brand_type_api_general_delete_brand_type__brand_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-brand-type/{brand_type_id}": {"put": {"tags": ["Brand Type"], "summary": "Put Brand Type", "operationId": "put_brand_type_api_general_update_brand_type__brand_type_id__put", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBrandTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-brand-type/{brand_type_id}": {"patch": {"tags": ["Brand Type"], "summary": "Patch Brand Type", "operationId": "patch_brand_type_api_general_active_brand_type__brand_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Brand Type Id"}, "name": "brand_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-categorys": {"get": {"tags": ["Business Category"], "summary": "Get Business Categories", "operationId": "get_business_categories_api_general_get_business_categorys_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-category/{business_category_id}": {"get": {"tags": ["Business Category"], "summary": "Get Business Category", "operationId": "get_business_category_api_general_get_business_category__business_category_id__get", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-category": {"post": {"tags": ["Business Category"], "summary": "Post Business Category", "operationId": "post_business_category_api_general_create_business_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-category/{business_category_id}": {"delete": {"tags": ["Business Category"], "summary": "Delete Business Category", "operationId": "delete_business_category_api_general_delete_business_category__business_category_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-category/{business_category_id}": {"put": {"tags": ["Business Category"], "summary": "Put Business Category", "operationId": "put_business_category_api_general_update_business_category__business_category_id__put", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessCategoryGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-category/{business_category_id}": {"patch": {"tags": ["Business Category"], "summary": "Patch Business Category", "operationId": "patch_business_category_api_general_active_business_category__business_category_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Category Id"}, "name": "business_category_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-groups": {"get": {"tags": ["Business Group"], "summary": "Get Business Groups", "operationId": "get_business_groups_api_general_get_business_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-group/{business_group_id}": {"get": {"tags": ["Business Group"], "summary": "Get Business Group", "operationId": "get_business_group_api_general_get_business_group__business_group_id__get", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-group": {"post": {"tags": ["Business Group"], "summary": "Post Business Group", "operationId": "post_business_group_api_general_create_business_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-group/{business_group_id}": {"delete": {"tags": ["Business Group"], "summary": "Delete Business Group", "operationId": "delete_business_group_api_general_delete_business_group__business_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-group/{business_group_id}": {"put": {"tags": ["Business Group"], "summary": "Put Business Group", "operationId": "put_business_group_api_general_update_business_group__business_group_id__put", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-group/{business_group_id}": {"patch": {"tags": ["Business Group"], "summary": "Patch Business Group", "operationId": "patch_business_group_api_general_active_business_group__business_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Group Id"}, "name": "business_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-scopes": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scopes", "operationId": "get_business_scopes_api_general_get_business_scopes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-scope/{business_scope_id}": {"get": {"tags": ["Business Scope"], "summary": "Get Business Scope", "operationId": "get_business_scope_api_general_get_business_scope__business_scope_id__get", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-scope": {"post": {"tags": ["Business Scope"], "summary": "Post Business Scope", "operationId": "post_business_scope_api_general_create_business_scope_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-scope/{business_scope_id}": {"delete": {"tags": ["Business Scope"], "summary": "Delete Business Scope", "operationId": "delete_business_scope_api_general_delete_business_scope__business_scope_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-scope/{business_scope_id}": {"put": {"tags": ["Business Scope"], "summary": "Put Business Scope", "operationId": "put_business_scope_api_general_update_business_scope__business_scope_id__put", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessScopeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-scope/{business_scope_id}": {"patch": {"tags": ["Business Scope"], "summary": "Patch Business Scope", "operationId": "patch_business_scope_api_general_active_business_scope__business_scope_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Scope Id"}, "name": "business_scope_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-business-types": {"get": {"tags": ["Business Type"], "summary": "Get Business Types", "operationId": "get_business_types_api_general_get_business_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-business-type/{business_type_id}": {"get": {"tags": ["Business Type"], "summary": "Get Business Type", "operationId": "get_business_type_api_general_get_business_type__business_type_id__get", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-business-type": {"post": {"tags": ["Business Type"], "summary": "Post Business Type", "operationId": "post_business_type_api_general_create_business_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-business-type/{business_type_id}": {"delete": {"tags": ["Business Type"], "summary": "Delete Business Type", "operationId": "delete_business_type_api_general_delete_business_type__business_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-business-type/{business_type_id}": {"put": {"tags": ["Business Type"], "summary": "Put Business Type", "operationId": "put_business_type_api_general_update_business_type__business_type_id__put", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrBusinessTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-business-type/{business_type_id}": {"patch": {"tags": ["Business Type"], "summary": "Patch Business Type", "operationId": "patch_business_type_api_general_active_business_type__business_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Business Type Id"}, "name": "business_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country": {"get": {"tags": ["Country"], "summary": "Get All Data", "operationId": "get_all_data_api_general_country_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Country"], "summary": "Create Data", "operationId": "create_data_api_general_country_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/country/{id}": {"get": {"tags": ["Country"], "summary": "Get By Id", "operationId": "get_by_id_api_general_country__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Country"], "summary": "Update Data", "operationId": "update_data_api_general_country__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCountryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Country"], "summary": "Delete Data", "operationId": "delete_data_api_general_country__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-classs": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Classes", "operationId": "get_customer_classes_api_general_get_customer_classs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-class/{customer_class_id}": {"get": {"tags": ["Customer Class"], "summary": "Get Customer Class", "operationId": "get_customer_class_api_general_get_customer_class__customer_class_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-class": {"post": {"tags": ["Customer Class"], "summary": "Post Customer Class", "operationId": "post_customer_class_api_general_create_customer_class_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-class/{customer_class_id}": {"delete": {"tags": ["Customer Class"], "summary": "Delete Customer Class", "operationId": "delete_customer_class_api_general_delete_customer_class__customer_class_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-class/{customer_class_id}": {"put": {"tags": ["Customer Class"], "summary": "Put Customer Class", "operationId": "put_customer_class_api_general_update_customer_class__customer_class_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerClassGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-class/{customer_class_id}": {"patch": {"tags": ["Customer Class"], "summary": "Patch Customer Class", "operationId": "patch_customer_class_api_general_active_customer_class__customer_class_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Class Id"}, "name": "customer_class_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-customer-type-flag-lists": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag Lists", "operationId": "get_customer_type_flag_lists_api_general_get_customer_type_flag_lists_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-customer-type-flag-list/{customer_type_flag_list_id}": {"get": {"tags": ["Customer Type Flag List"], "summary": "Get Customer Type Flag List", "operationId": "get_customer_type_flag_list_api_general_get_customer_type_flag_list__customer_type_flag_list_id__get", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-customer-type-flag-list": {"post": {"tags": ["Customer Type Flag List"], "summary": "Post Customer Type Flag List", "operationId": "post_customer_type_flag_list_api_general_create_customer_type_flag_list_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-customer-type-flag-list/{customer_type_flag_list_id}": {"delete": {"tags": ["Customer Type Flag List"], "summary": "Delete Customer Type Flag List", "operationId": "delete_customer_type_flag_list_api_general_delete_customer_type_flag_list__customer_type_flag_list_id__delete", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-customer-type-flag-list/{customer_type_flag_list_id}": {"put": {"tags": ["Customer Type Flag List"], "summary": "Put Customer Type Flag List", "operationId": "put_customer_type_flag_list_api_general_update_customer_type_flag_list__customer_type_flag_list_id__put", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrCustomerTypeFlagListGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-customer-type-flag-list/{customer_type_flag_list_id}": {"patch": {"tags": ["Customer Type Flag List"], "summary": "Patch Customer Type Flag List", "operationId": "patch_customer_type_flag_list_api_general_active_customer_type_flag_list__customer_type_flag_list_id__patch", "parameters": [{"required": true, "schema": {"title": "Customer Type Flag List Id"}, "name": "customer_type_flag_list_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-finance-areas": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Areas", "operationId": "get_finance_areas_api_general_get_finance_areas_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-finance-area/{finance_area_id}": {"get": {"tags": ["Finance Area"], "summary": "Get Finance Area", "operationId": "get_finance_area_api_general_get_finance_area__finance_area_id__get", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-finance-area": {"post": {"tags": ["Finance Area"], "summary": "Post Finance Area", "operationId": "post_finance_area_api_general_create_finance_area_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-finance-area/{finance_area_id}": {"delete": {"tags": ["Finance Area"], "summary": "Delete Finance Area", "operationId": "delete_finance_area_api_general_delete_finance_area__finance_area_id__delete", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-finance-area/{finance_area_id}": {"put": {"tags": ["Finance Area"], "summary": "Put Finance Area", "operationId": "put_finance_area_api_general_update_finance_area__finance_area_id__put", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrFinanceAreaGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-finance-area/{finance_area_id}": {"patch": {"tags": ["Finance Area"], "summary": "Patch Finance Area", "operationId": "patch_finance_area_api_general_active_finance_area__finance_area_id__patch", "parameters": [{"required": true, "schema": {"title": "Finance Area Id"}, "name": "finance_area_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-account-types": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Types", "operationId": "get_general_ledger_account_types_api_general_get_general_ledger_account_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-account-type/{general_ledger_account_type_id}": {"get": {"tags": ["General Account Type"], "summary": "Get General Ledger Account Type", "operationId": "get_general_ledger_account_type_api_general_get_general_ledger_account_type__general_ledger_account_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-account-type": {"post": {"tags": ["General Account Type"], "summary": "Post General Ledger Account Type", "operationId": "post_general_ledger_account_type_api_general_create_general_ledger_account_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-account-type/{general_ledger_account_type_id}": {"delete": {"tags": ["General Account Type"], "summary": "Delete General Ledger Account Type", "operationId": "delete_general_ledger_account_type_api_general_delete_general_ledger_account_type__general_ledger_account_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-account-type/{general_ledger_account_type_id}": {"put": {"tags": ["General Account Type"], "summary": "Put General Ledger Account Type", "operationId": "put_general_ledger_account_type_api_general_update_general_ledger_account_type__general_ledger_account_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerAccountTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-account-type/{general_ledger_account_type_id}": {"patch": {"tags": ["General Account Type"], "summary": "Patch General Ledger Account Type", "operationId": "patch_general_ledger_account_type_api_general_active_general_ledger_account_type__general_ledger_account_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Account Type Id"}, "name": "general_ledger_account_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-dimension-types": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Types", "operationId": "get_general_ledger_dimension_types_api_general_get_general_ledger_dimension_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"get": {"tags": ["General Ledger Dimension Type"], "summary": "Get General Ledger Dimension Type", "operationId": "get_general_ledger_dimension_type_api_general_get_general_ledger_dimension_type__general_ledger_dimension_type_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-dimension-type": {"post": {"tags": ["General Ledger Dimension Type"], "summary": "Post General Ledger Dimension Type", "operationId": "post_general_ledger_dimension_type_api_general_create_general_ledger_dimension_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"delete": {"tags": ["General Ledger Dimension Type"], "summary": "Delete General Ledger Dimension Type", "operationId": "delete_general_ledger_dimension_type_api_general_delete_general_ledger_dimension_type__general_ledger_dimension_type_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"put": {"tags": ["General Ledger Dimension Type"], "summary": "Put General Ledger Dimension Type", "operationId": "put_general_ledger_dimension_type_api_general_update_general_ledger_dimension_type__general_ledger_dimension_type_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerDimensionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-dimension-type/{general_ledger_dimension_type_id}": {"patch": {"tags": ["General Ledger Dimension Type"], "summary": "Patch General Ledger Dimension Type", "operationId": "patch_general_ledger_dimension_type_api_general_active_general_ledger_dimension_type__general_ledger_dimension_type_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Dimension Type Id"}, "name": "general_ledger_dimension_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-general-ledger-processs": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Processs", "operationId": "get_general_ledger_processs_api_general_get_general_ledger_processs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-general-ledger-process/{general_ledger_process_id}": {"get": {"tags": ["General Ledger Process"], "summary": "Get General Ledger Process", "operationId": "get_general_ledger_process_api_general_get_general_ledger_process__general_ledger_process_id__get", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-general-ledger-process": {"post": {"tags": ["General Ledger Process"], "summary": "Post General Ledger Process", "operationId": "post_general_ledger_process_api_general_create_general_ledger_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-general-ledger-process/{general_ledger_process_id}": {"delete": {"tags": ["General Ledger Process"], "summary": "Delete General Ledger Process", "operationId": "delete_general_ledger_process_api_general_delete_general_ledger_process__general_ledger_process_id__delete", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-general-ledger-process/{general_ledger_process_id}": {"put": {"tags": ["General Ledger Process"], "summary": "Put General Ledger Process", "operationId": "put_general_ledger_process_api_general_update_general_ledger_process__general_ledger_process_id__put", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrGeneralLedgerProcessGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-general-ledger-process/{general_ledger_process_id}": {"patch": {"tags": ["General Ledger Process"], "summary": "Patch General Ledger Process", "operationId": "patch_general_ledger_process_api_general_active_general_ledger_process__general_ledger_process_id__patch", "parameters": [{"required": true, "schema": {"title": "General Ledger Process Id"}, "name": "general_ledger_process_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-incentive-levels": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Levels", "operationId": "get_incentive_levels_api_general_get_incentive_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-incentive-level/{incentive_level_id}": {"get": {"tags": ["Incentive Level"], "summary": "Get Incentive Level", "operationId": "get_incentive_level_api_general_get_incentive_level__incentive_level_id__get", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-incentive-level": {"post": {"tags": ["Incentive Level"], "summary": "Post Incentive Level", "operationId": "post_incentive_level_api_general_create_incentive_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-incentive-level/{incentive_level_id}": {"delete": {"tags": ["Incentive Level"], "summary": "Delete Incentive Level", "operationId": "delete_incentive_level_api_general_delete_incentive_level__incentive_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-incentive-level/{incentive_level_id}": {"put": {"tags": ["Incentive Level"], "summary": "Put Incentive Level", "operationId": "put_incentive_level_api_general_update_incentive_level__incentive_level_id__put", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrIncentiveLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-incentive-level/{incentive_level_id}": {"patch": {"tags": ["Incentive Level"], "summary": "Patch Incentive Level", "operationId": "patch_incentive_level_api_general_active_incentive_level__incentive_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Incentive Level Id"}, "name": "incentive_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-item-groups": {"get": {"tags": ["Item Group"], "summary": "Get Item Groups", "operationId": "get_item_groups_api_general_get_item_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-item-group/{item_group_id}": {"get": {"tags": ["Item Group"], "summary": "Get Item Group", "operationId": "get_item_group_api_general_get_item_group__item_group_id__get", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-item-group": {"post": {"tags": ["Item Group"], "summary": "Post Item Group", "operationId": "post_item_group_api_general_create_item_group_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-item-group/{item_group_id}": {"delete": {"tags": ["Item Group"], "summary": "Delete Item Group", "operationId": "delete_item_group_api_general_delete_item_group__item_group_id__delete", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-item-group/{item_group_id}": {"put": {"tags": ["Item Group"], "summary": "Put Item Group", "operationId": "put_item_group_api_general_update_item_group__item_group_id__put", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrItemGroupGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-item-group/{item_group_id}": {"patch": {"tags": ["Item Group"], "summary": "Patch Item Group", "operationId": "patch_item_group_api_general_active_item_group__item_group_id__patch", "parameters": [{"required": true, "schema": {"title": "Item Group Id"}, "name": "item_group_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-positions": {"get": {"tags": ["Job Position"], "summary": "Get Job Positions", "operationId": "get_job_positions_api_general_get_job_positions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-position/{job_position_id}": {"get": {"tags": ["Job Position"], "summary": "Get Job Position", "operationId": "get_job_position_api_general_get_job_position__job_position_id__get", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-position": {"post": {"tags": ["Job Position"], "summary": "Post Job Position", "operationId": "post_job_position_api_general_create_job_position_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-position/{job_position_id}": {"delete": {"tags": ["Job Position"], "summary": "Delete Job Position", "operationId": "delete_job_position_api_general_delete_job_position__job_position_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-position/{job_position_id}": {"put": {"tags": ["Job Position"], "summary": "Put Job Position", "operationId": "put_job_position_api_general_update_job_position__job_position_id__put", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobPositionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-position/{job_position_id}": {"patch": {"tags": ["Job Position"], "summary": "Patch Job Positionn", "operationId": "patch_job_positionn_api_general_active_job_position__job_position_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Position Id"}, "name": "job_position_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-job-titles": {"get": {"tags": ["Job Title"], "summary": "Get Job Titles", "operationId": "get_job_titles_api_general_get_job_titles_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-job-title/{job_title_id}": {"get": {"tags": ["Job Title"], "summary": "Get Job Title", "operationId": "get_job_title_api_general_get_job_title__job_title_id__get", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-job-title": {"post": {"tags": ["Job Title"], "summary": "Post Job Title", "operationId": "post_job_title_api_general_create_job_title_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-job-title/{job_title_id}": {"delete": {"tags": ["Job Title"], "summary": "Delete Job Title", "operationId": "delete_job_title_api_general_delete_job_title__job_title_id__delete", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-job-title/{job_title_id}": {"put": {"tags": ["Job Title"], "summary": "Put Job Title", "operationId": "put_job_title_api_general_update_job_title__job_title_id__put", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrJobTitleGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-job-title/{job_title_id}": {"patch": {"tags": ["Job Title"], "summary": "Patch Job Title", "operationId": "patch_job_title_api_general_active_job_title__job_title_id__patch", "parameters": [{"required": true, "schema": {"title": "Job Title Id"}, "name": "job_title_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-line-types": {"get": {"tags": ["Line Type"], "summary": "Get Line Types", "operationId": "get_line_types_api_general_get_line_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-line-type/{line_type_id}": {"get": {"tags": ["Line Type"], "summary": "Get Line Type", "operationId": "get_line_type_api_general_get_line_type__line_type_id__get", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-line-type": {"post": {"tags": ["Line Type"], "summary": "Post Line Type", "operationId": "post_line_type_api_general_create_line_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-line-type/{line_type_id}": {"delete": {"tags": ["Line Type"], "summary": "Delete Line Type", "operationId": "delete_line_type_api_general_delete_line_type__line_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-line-type/{line_type_id}": {"put": {"tags": ["Line Type"], "summary": "Put Line Type", "operationId": "put_line_type_api_general_update_line_type__line_type_id__put", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLineTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-line-type/{line_type_id}": {"patch": {"tags": ["Line Type"], "summary": "Patch Line Type", "operationId": "patch_line_type_api_general_active_line_type__line_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Line Type Id"}, "name": "line_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-loggings": {"get": {"tags": ["Logging"], "summary": "Get Loggings", "operationId": "get_loggings_api_general_get_loggings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-logging/{logging_id}": {"get": {"tags": ["Logging"], "summary": "Get Logging", "operationId": "get_logging_api_general_get_logging__logging_id__get", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-logging": {"post": {"tags": ["Logging"], "summary": "Post Logging", "operationId": "post_logging_api_general_create_logging_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingPostSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-logging/{logging_id}": {"delete": {"tags": ["Logging"], "summary": "Delete Logging", "operationId": "delete_logging_api_general_delete_logging__logging_id__delete", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-logging/{logging_id}": {"put": {"tags": ["Logging"], "summary": "Put Logging", "operationId": "put_logging_api_general_update_logging__logging_id__put", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrLoggingGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-logging/{logging_id}": {"patch": {"tags": ["Logging"], "summary": "Patch Logging", "operationId": "patch_logging_api_general_active_logging__logging_id__patch", "parameters": [{"required": true, "schema": {"title": "Logging Id"}, "name": "logging_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-ip": {"post": {"tags": ["Logging"], "summary": "Log Ip", "operationId": "log_ip_api_general_get_ip_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-time": {"post": {"tags": ["Logging"], "summary": "Log Datetime", "operationId": "log_datetime_api_general_get_time_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-method": {"post": {"tags": ["Logging"], "summary": "Log Method", "operationId": "log_method_api_general_get_method_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-url": {"post": {"tags": ["Logging"], "summary": "Log Path", "operationId": "log_path_api_general_get_url_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-codes": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Codes", "operationId": "get_price_list_codes_api_general_get_price_list_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-price-list-code/{price_list_code_id}": {"get": {"tags": ["Price List Code"], "summary": "Get Price List Code", "operationId": "get_price_list_code_api_general_get_price_list_code__price_list_code_id__get", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-price-list-code": {"post": {"tags": ["Price List Code"], "summary": "Post Price List Code", "operationId": "post_price_list_code_api_general_create_price_list_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-price-list-code/{price_list_code_id}": {"delete": {"tags": ["Price List Code"], "summary": "Delete Price List Code", "operationId": "delete_price_list_code_api_general_delete_price_list_code__price_list_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-price-list-code/{price_list_code_id}": {"put": {"tags": ["Price List Code"], "summary": "Put Price List Code", "operationId": "put_price_list_code_api_general_update_price_list_code__price_list_code_id__put", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrPriceListCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-price-list-code/{price_list_code_id}": {"patch": {"tags": ["Price List Code"], "summary": "Patch Price List Code", "operationId": "patch_price_list_code_api_general_active_price_list_code__price_list_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Price List Code Id"}, "name": "price_list_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province": {"get": {"tags": ["Province"], "summary": "Get All Data", "operationId": "get_all_data_api_general_province_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["Province"], "summary": "Create Data", "operationId": "create_data_api_general_province_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/province/{id}": {"get": {"tags": ["Province"], "summary": "Get By Id", "operationId": "get_by_id_api_general_province__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Province"], "summary": "Update Data", "operationId": "update_data_api_general_province__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrProvinceRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Province"], "summary": "Delete Data", "operationId": "delete_data_api_general_province__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-reference-type-purchase-requests": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Requests", "operationId": "get_reference_type_purchase_requests_api_general_get_reference_type_purchase_requests_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-reference-type-purchase-request/{reference_type_purchase_request_id}": {"get": {"tags": ["Reference Type Purchase Request"], "summary": "Get Reference Type Purchase Request", "operationId": "get_reference_type_purchase_request_api_general_get_reference_type_purchase_request__reference_type_purchase_request_id__get", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-reference-type-purchase-request": {"post": {"tags": ["Reference Type Purchase Request"], "summary": "Post Reference Type Purchase Request", "operationId": "post_reference_type_purchase_request_api_general_create_reference_type_purchase_request_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-reference-type-purchase-request/{reference_type_purchase_request_id}": {"delete": {"tags": ["Reference Type Purchase Request"], "summary": "Delete Reference Type Purchase Request", "operationId": "delete_reference_type_purchase_request_api_general_delete_reference_type_purchase_request__reference_type_purchase_request_id__delete", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-reference-type-purchase-request/{reference_type_purchase_request_id}": {"put": {"tags": ["Reference Type Purchase Request"], "summary": "Put Reference Type Purchase Request", "operationId": "put_reference_type_purchase_request_api_general_update_reference_type_purchase_request__reference_type_purchase_request_id__put", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrReferenceTypePurchaseRequestGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-reference-type-purchase-request/{reference_type_purchase_request_id}": {"patch": {"tags": ["Reference Type Purchase Request"], "summary": "Patch Reference Type Purchase Request", "operationId": "patch_reference_type_purchase_request_api_general_active_reference_type_purchase_request__reference_type_purchase_request_id__patch", "parameters": [{"required": true, "schema": {"title": "Reference Type Purchase Request Id"}, "name": "reference_type_purchase_request_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_get", "parameters": [{"required": false, "schema": {"title": "Query", "type": "array", "items": {"type": "string"}}, "name": "query", "in": "query"}, {"required": false, "schema": {"title": "Query Params", "type": "array", "items": {"type": "string"}}, "name": "query_params", "in": "query"}, {"required": false, "schema": {"title": "Page", "type": "integer"}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Page Limit", "type": "integer"}, "name": "page_limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Region"], "summary": "Create Data", "operationId": "create_data_api_general_region_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/{id}": {"get": {"tags": ["Region"], "summary": "Get By Id", "operationId": "get_by_id_api_general_region__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Region"], "summary": "Update Data", "operationId": "update_data_api_general_region__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrRegionRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Region"], "summary": "Delete Data", "operationId": "delete_data_api_general_region__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "integer"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region_params": {"get": {"tags": ["Region"], "summary": "Get By Params", "operationId": "get_by_params_api_general_region_params_get", "parameters": [{"required": true, "schema": {"title": "Param", "type": "string"}, "name": "param", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/region/test": {"get": {"tags": ["Region"], "summary": "Get All Data", "operationId": "get_all_data_api_general_region_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-codes": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Codes", "operationId": "get_skill_level_codes_api_general_get_skill_level_codes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level-code/{skill_level_code_id}": {"get": {"tags": ["Skill Level Code"], "summary": "Get Skill Level Code", "operationId": "get_skill_level_code_api_general_get_skill_level_code__skill_level_code_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level-code": {"post": {"tags": ["Skill Level Code"], "summary": "Post Skill Level Code", "operationId": "post_skill_level_code_api_general_create_skill_level_code_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level-code/{skill_level_code_id}": {"delete": {"tags": ["Skill Level Code"], "summary": "Delete Skill Level Code", "operationId": "delete_skill_level_code_api_general_delete_skill_level_code__skill_level_code_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level-code/{skill_level_code_id}": {"put": {"tags": ["Skill Level Code"], "summary": "Put Skill Level Code", "operationId": "put_skill_level_code_api_general_update_skill_level_code__skill_level_code_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelCodeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level-code/{skill_level_code_id}": {"patch": {"tags": ["Skill Level Code"], "summary": "Patch Skill Level Code", "operationId": "patch_skill_level_code_api_general_active_skill_level_code__skill_level_code_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Code Id"}, "name": "skill_level_code_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-skill-levels": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Levels", "operationId": "get_skill_levels_api_general_get_skill_levels_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-skill-level/{skill_level_id}": {"get": {"tags": ["Skill Level"], "summary": "Get Skill Level", "operationId": "get_skill_level_api_general_get_skill_level__skill_level_id__get", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-skill-level": {"post": {"tags": ["Skill Level"], "summary": "Post Skill Level", "operationId": "post_skill_level_api_general_create_skill_level_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-skill-level/{skill_level_id}": {"delete": {"tags": ["Skill Level"], "summary": "Delete Skill Level", "operationId": "delete_skill_level_api_general_delete_skill_level__skill_level_id__delete", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-skill-level/{skill_level_id}": {"put": {"tags": ["Skill Level"], "summary": "Put Skill Level", "operationId": "put_skill_level_api_general_update_skill_level__skill_level_id__put", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSkillLevelGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-skill-level/{skill_level_id}": {"patch": {"tags": ["Skill Level"], "summary": "Patch Skill Level", "operationId": "patch_skill_level_api_general_active_skill_level__skill_level_id__patch", "parameters": [{"required": true, "schema": {"title": "Skill Level Id"}, "name": "skill_level_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-source-approval-documents": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Documents", "operationId": "get_source_approval_documents_api_general_get_source_approval_documents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-source-approval-document/{source_approval_document_id}": {"get": {"tags": ["Source Approval Document"], "summary": "Get Source Approval Document", "operationId": "get_source_approval_document_api_general_get_source_approval_document__source_approval_document_id__get", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-source-approval-document": {"post": {"tags": ["Source Approval Document"], "summary": "Post Source Approval Document", "operationId": "post_source_approval_document_api_general_create_source_approval_document_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-source-approval-document/{source_approval_document_id}": {"delete": {"tags": ["Source Approval Document"], "summary": "Delete Source Approval Document", "operationId": "delete_source_approval_document_api_general_delete_source_approval_document__source_approval_document_id__delete", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-source-approval-document/{source_approval_document_id}": {"put": {"tags": ["Source Approval Document"], "summary": "Put Source Approval Document", "operationId": "put_source_approval_document_api_general_update_source_approval_document__source_approval_document_id__put", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSourceApprovalDocumentGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-source-approval-document/{source_approval_document_id}": {"patch": {"tags": ["Source Approval Document"], "summary": "Patch Source Approval Document", "operationId": "patch_source_approval_document_api_general_active_source_approval_document__source_approval_document_id__patch", "parameters": [{"required": true, "schema": {"title": "Source Approval Document Id"}, "name": "source_approval_document_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-special-movements": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movements", "operationId": "get_special_movements_api_general_get_special_movements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-special-movement/{special_movement_id}": {"get": {"tags": ["Special Movement"], "summary": "Get Special Movement", "operationId": "get_special_movement_api_general_get_special_movement__special_movement_id__get", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-special-movement": {"post": {"tags": ["Special Movement"], "summary": "Post Special Movement", "operationId": "post_special_movement_api_general_create_special_movement_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-special-movement/{special_movement_id}": {"delete": {"tags": ["Special Movement"], "summary": "Delete Special Movement", "operationId": "delete_special_movement_api_general_delete_special_movement__special_movement_id__delete", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-special-movement/{special_movement_id}": {"put": {"tags": ["Special Movement"], "summary": "Put Special Movement", "operationId": "put_special_movement_api_general_update_special_movement__special_movement_id__put", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSpecialMovementGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-special-movement/{special_movement_id}": {"patch": {"tags": ["Special Movement"], "summary": "Patch Special Movement", "operationId": "patch_special_movement_api_general_active_special_movement__special_movement_id__patch", "parameters": [{"required": true, "schema": {"title": "Special Movement Id"}, "name": "special_movement_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-substitute-types": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Types", "operationId": "get_substitue_types_api_general_get_substitute_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-substitute-type/{substitue_type_id}": {"get": {"tags": ["Substitute Type"], "summary": "Get Substitue Type", "operationId": "get_substitue_type_api_general_get_substitute_type__substitue_type_id__get", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-substitute-type": {"post": {"tags": ["Substitute Type"], "summary": "Post Substitue Type", "operationId": "post_substitue_type_api_general_create_substitute_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-substitue-type/{substitue_type_id}": {"delete": {"tags": ["Substitute Type"], "summary": "Delete Substitue Type", "operationId": "delete_substitue_type_api_general_delete_substitue_type__substitue_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-substitute-type/{substitue_type_id}": {"put": {"tags": ["Substitute Type"], "summary": "Put Substitue Type", "operationId": "put_substitue_type_api_general_update_substitute_type__substitue_type_id__put", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrSubstituteTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-substitute-type/{substitue_type_id}": {"patch": {"tags": ["Substitute Type"], "summary": "Patch Substitue Type", "operationId": "patch_substitue_type_api_general_active_substitute_type__substitue_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Substitue Type Id"}, "name": "substitue_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-format-types": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Types", "operationId": "get_tax_format_types_api_general_get_tax_format_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-format-type/{tax_format_type_id}": {"get": {"tags": ["Tax Format Type"], "summary": "Get Tax Format Type", "operationId": "get_tax_format_type_api_general_get_tax_format_type__tax_format_type_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-format-type": {"post": {"tags": ["Tax Format Type"], "summary": "Post Tax Format Type", "operationId": "post_tax_format_type_api_general_create_tax_format_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-format-type/{tax_format_type_id}": {"delete": {"tags": ["Tax Format Type"], "summary": "Delete Tax Format Type", "operationId": "delete_tax_format_type_api_general_delete_tax_format_type__tax_format_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-format-type/{tax_format_type_id}": {"put": {"tags": ["Tax Format Type"], "summary": "Put Tax Format Type", "operationId": "put_tax_format_type_api_general_update_tax_format_type__tax_format_type_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxFormatTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-format-type/{tax_format_type_id}": {"patch": {"tags": ["Tax Format Type"], "summary": "Patch Tax Format Type", "operationId": "patch_tax_format_type_api_general_active_tax_format_type__tax_format_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Format Type Id"}, "name": "tax_format_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-tax-out-transactions": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transactions", "operationId": "get_tax_out_transactions_api_general_get_tax_out_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-tax-out-transaction/{tax_out_transaction_id}": {"get": {"tags": ["Tax Out Transaction SPM"], "summary": "Get Tax Out Transaction", "operationId": "get_tax_out_transaction_api_general_get_tax_out_transaction__tax_out_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-tax-out-transaction": {"post": {"tags": ["Tax Out Transaction SPM"], "summary": "Post Tax Out Transaction", "operationId": "post_tax_out_transaction_api_general_create_tax_out_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-tax-out-transaction/{tax_out_transaction_id}": {"delete": {"tags": ["Tax Out Transaction SPM"], "summary": "Delete Tax Out Transaction", "operationId": "delete_tax_out_transaction_api_general_delete_tax_out_transaction__tax_out_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-tax-out-transaction/{tax_out_transaction_id}": {"put": {"tags": ["Tax Out Transaction SPM"], "summary": "Put Tax Out Transaction", "operationId": "put_tax_out_transaction_api_general_update_tax_out_transaction__tax_out_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTaxOutTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-tax-out-transaction/{tax_out_transaction_id}": {"patch": {"tags": ["Tax Out Transaction SPM"], "summary": "Patch Tax Out Transaction", "operationId": "patch_tax_out_transaction_api_general_active_tax_out_transaction__tax_out_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Tax Out Transaction Id"}, "name": "tax_out_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-type-cash-management-outs": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Outs", "operationId": "get_transaction_type_cash_management_outs_api_general_get_transaction_type_cash_management_outs_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"get": {"tags": ["Transaction Type Cash Management Out"], "summary": "Get Transaction Type Cash Management Out", "operationId": "get_transaction_type_cash_management_out_api_general_get_transaction_type_cash_management_out__transaction_type_cash_management_out_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type-cash-management-out": {"post": {"tags": ["Transaction Type Cash Management Out"], "summary": "Post Transaction Type Cash Management Out", "operationId": "post_transaction_type_cash_management_out_api_general_create_transaction_type_cash_management_out_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"delete": {"tags": ["Transaction Type Cash Management Out"], "summary": "Delete Transaction Type Cash Management Out", "operationId": "delete_transaction_type_cash_management_out_api_general_delete_transaction_type_cash_management_out__transaction_type_cash_management_out_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"put": {"tags": ["Transaction Type Cash Management Out"], "summary": "Put Transaction Type Cash Management Out", "operationId": "put_transaction_type_cash_management_out_api_general_update_transaction_type_cash_management_out__transaction_type_cash_management_out_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeCashManagementOutGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type-cash-management-out/{transaction_type_cash_management_out_id}": {"patch": {"tags": ["Transaction Type Cash Management Out"], "summary": "Patch Transaction Type Cash Management Out", "operationId": "patch_transaction_type_cash_management_out_api_general_active_transaction_type_cash_management_out__transaction_type_cash_management_out_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Cash Management Out Id"}, "name": "transaction_type_cash_management_out_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-transaction-types": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Types", "operationId": "get_transaction_types_api_general_get_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-transaction-type/{transaction_type_id}": {"get": {"tags": ["Transaction Type"], "summary": "Get Transaction Type", "operationId": "get_transaction_type_api_general_get_transaction_type__transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-transaction-type": {"post": {"tags": ["Transaction Type"], "summary": "Post Transaction Type", "operationId": "post_transaction_type_api_general_create_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-transaction-type/{transaction_type_id}": {"delete": {"tags": ["Transaction Type"], "summary": "Delete Transaction Type", "operationId": "delete_transaction_type_api_general_delete_transaction_type__transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-transaction-type/{transaction_type_id}": {"put": {"tags": ["Transaction Type"], "summary": "Put Transaction Type", "operationId": "put_transaction_type_api_general_update_transaction_type__transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-transaction-type/{transaction_type_id}": {"patch": {"tags": ["Transaction Type"], "summary": "Patch Transaction Type", "operationId": "patch_transaction_type_api_general_active_transaction_type__transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Transaction Type Id"}, "name": "transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-unit-of-measurement-items": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Items", "operationId": "get_unit_of_measurement_items_api_general_get_unit_of_measurement_items_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-unit-of-measurement-item/{unit_of_measurement_item_id}": {"get": {"tags": ["Unit Of Measurement Item"], "summary": "Get Unit Of Measurement Item", "operationId": "get_unit_of_measurement_item_api_general_get_unit_of_measurement_item__unit_of_measurement_item_id__get", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-unit-of-measurement-item": {"post": {"tags": ["Unit Of Measurement Item"], "summary": "Post Unit Of Measurement Item", "operationId": "post_unit_of_measurement_item_api_general_create_unit_of_measurement_item_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-unit-of-measurement-item/{unit_of_measurement_item_id}": {"delete": {"tags": ["Unit Of Measurement Item"], "summary": "Delete Unit Of Measurement Item", "operationId": "delete_unit_of_measurement_item_api_general_delete_unit_of_measurement_item__unit_of_measurement_item_id__delete", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-unit-of-measurement-item/{unit_of_measurement_item_id}": {"put": {"tags": ["Unit Of Measurement Item"], "summary": "Put Unit Of Measurement Item", "operationId": "put_unit_of_measurement_item_api_general_update_unit_of_measurement_item__unit_of_measurement_item_id__put", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrUnitOfMeasurementItemGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-unit-of-measurement-item/{unit_of_measurement_item_id}": {"patch": {"tags": ["Unit Of Measurement Item"], "summary": "Patch Unit Of Measurement Item", "operationId": "patch_unit_of_measurement_item_api_general_active_unit_of_measurement_item__unit_of_measurement_item_id__patch", "parameters": [{"required": true, "schema": {"title": "Unit Of Measurement Item Id"}, "name": "unit_of_measurement_item_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-void-transactions": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transactions", "operationId": "get_void_transactions_api_general_get_void_transactions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-void-transaction/{void_transaction_id}": {"get": {"tags": ["Void Transaction"], "summary": "Get Void Transaction", "operationId": "get_void_transaction_api_general_get_void_transaction__void_transaction_id__get", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-void-transaction": {"post": {"tags": ["Void Transaction"], "summary": "Post Void Transaction", "operationId": "post_void_transaction_api_general_create_void_transaction_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-void-transaction/{void_transaction_id}": {"delete": {"tags": ["Void Transaction"], "summary": "Delete Void Transaction", "operationId": "delete_void_transaction_api_general_delete_void_transaction__void_transaction_id__delete", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-void-transaction/{void_transaction_id}": {"put": {"tags": ["Void Transaction"], "summary": "Put Void Transaction", "operationId": "put_void_transaction_api_general_update_void_transaction__void_transaction_id__put", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrVoidTransactionGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-void-transaction/{void_transaction_id}": {"patch": {"tags": ["Void Transaction"], "summary": "Patch Void Transaction", "operationId": "patch_void_transaction_api_general_active_void_transaction__void_transaction_id__patch", "parameters": [{"required": true, "schema": {"title": "Void Transaction Id"}, "name": "void_transaction_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-transaction-types": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Types", "operationId": "get_work_order_transaction_types_api_general_get_work_order_transaction_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-transaction-type/{work_order_transaction_type_id}": {"get": {"tags": ["Work Order Transaction Type"], "summary": "Get Work Order Transaction Type", "operationId": "get_work_order_transaction_type_api_general_get_work_order_transaction_type__work_order_transaction_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-transaction-type": {"post": {"tags": ["Work Order Transaction Type"], "summary": "Post Work Order Transaction Type", "operationId": "post_work_order_transaction_type_api_general_create_work_order_transaction_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-transaction-type/{work_order_transaction_type_id}": {"delete": {"tags": ["Work Order Transaction Type"], "summary": "Delete Work Order Transaction Type", "operationId": "delete_work_order_transaction_type_api_general_delete_work_order_transaction_type__work_order_transaction_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-transaction-type/{work_order_transaction_type_id}": {"put": {"tags": ["Work Order Transaction Type"], "summary": "Put Work Order Transaction Type", "operationId": "put_work_order_transaction_type_api_general_update_work_order_transaction_type__work_order_transaction_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTransactionTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-transaction-type/{work_order_transaction_type_id}": {"patch": {"tags": ["Work Order Transaction Type"], "summary": "Patch Work Order Transaction Type", "operationId": "patch_work_order_transaction_type_api_general_active_work_order_transaction_type__work_order_transaction_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Transaction Type Id"}, "name": "work_order_transaction_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/get-work-order-types": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Types", "operationId": "get_work_order_types_api_general_get_work_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/general/get-work-order-type/{work_order_type_id}": {"get": {"tags": ["Work Order Type"], "summary": "Get Work Order Type", "operationId": "get_work_order_type_api_general_get_work_order_type__work_order_type_id__get", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/create-work-order-type": {"post": {"tags": ["Work Order Type"], "summary": "Post Work Order Type", "operationId": "post_work_order_type_api_general_create_work_order_type_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/delete-work-order-type/{work_order_type_id}": {"delete": {"tags": ["Work Order Type"], "summary": "Delete Work Order Type", "operationId": "delete_work_order_type_api_general_delete_work_order_type__work_order_type_id__delete", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/update-work-order-type/{work_order_type_id}": {"put": {"tags": ["Work Order Type"], "summary": "Put Work Order Type", "operationId": "put_work_order_type_api_general_update_work_order_type__work_order_type_id__put", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MtrWorkOrderTypeGetSchema"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/general/active-work-order-type/{work_order_type_id}": {"patch": {"tags": ["Work Order Type"], "summary": "Patch Work Order Type", "operationId": "patch_work_order_type_api_general_active_work_order_type__work_order_type_id__patch", "parameters": [{"required": true, "schema": {"title": "Work Order Type Id"}, "name": "work_order_type_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MtrAdjustmentReasonGetSchema": {"title": "MtrAdjustmentReasonGetSchema", "type": "object", "properties": {"adjustment_reason_code": {"title": "Adjustment Reason Code", "type": "string"}, "adjustment_reason_name": {"title": "Adjustment Reason Name", "type": "string"}}}, "MtrAfterSalesAreaGetSchema": {"title": "MtrAfterSalesAreaGetSchema", "type": "object", "properties": {"after_sales_area_code": {"title": "After Sales Area Code", "type": "string"}, "after_sales_area_name": {"title": "After Sales Area Name", "type": "string"}}}, "MtrApprovalCodeGetSchema": {"title": "MtrApprovalCodeGetSchema", "type": "object", "properties": {"approval_code": {"title": "Approval Code", "type": "string"}, "approval_code_name": {"title": "Approval Code Name", "type": "string"}}}, "MtrApprovalSPMGetSchema": {"title": "MtrApprovalSPMGetSchema", "type": "object", "properties": {"approval_spm_code": {"title": "Approval Spm Code", "type": "string"}, "approval_spm_name": {"title": "Approval Spm Name", "type": "string"}}}, "MtrAreaRequest": {"title": "MtrAreaRequest", "required": ["area_code", "description", "region_id"], "type": "object", "properties": {"area_code": {"title": "Area Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}}}, "MtrBankAccountTypeGetSchema": {"title": "MtrBankAccountTypeGetSchema", "type": "object", "properties": {"bank_account_type_code": {"title": "Bank Account Type Code", "type": "string"}, "bank_account_type_name": {"title": "Bank Account Type Name", "type": "string"}}}, "MtrBillableToGetSchema": {"title": "MtrBillableToGetSchema", "type": "object", "properties": {"billable_to_code": {"title": "Billable To Code", "type": "string"}, "billable_to_name": {"title": "Billable To Name", "type": "string"}}}, "MtrBrandTypeGetSchema": {"title": "MtrBrandTypeGetSchema", "type": "object", "properties": {"brand_type_code": {"title": "Brand Type Code", "type": "string"}, "brand_type_name": {"title": "Brand Type Name", "type": "string"}}}, "MtrBusinessCategoryGetSchema": {"title": "MtrBusinessCategoryGetSchema", "type": "object", "properties": {"business_category_code": {"title": "Business Category Code", "type": "string"}, "business_category_name": {"title": "Business Category Name", "type": "string"}}}, "MtrBusinessGroupGetSchema": {"title": "MtrBusinessGroupGetSchema", "type": "object", "properties": {"business_group_code": {"title": "Business Group Code", "type": "string"}, "business_group_name": {"title": "Business Group Name", "type": "string"}}}, "MtrBusinessScopeGetSchema": {"title": "MtrBusinessScopeGetSchema", "type": "object", "properties": {"business_scope_code": {"title": "Business Scope Code", "type": "string"}, "business_scope_name": {"title": "Business Scope Name", "type": "string"}}}, "MtrBusinessTypeGetSchema": {"title": "MtrBusinessTypeGetSchema", "type": "object", "properties": {"business_type_code": {"title": "Business Type Code", "type": "string"}, "business_type_name": {"title": "Business Type Name", "type": "string"}}}, "MtrCountryRequest": {"title": "MtrCountryRequest", "required": ["country_code", "country_name", "country_language", "country_phone", "currency_id"], "type": "object", "properties": {"country_code": {"title": "Country Code", "type": "string"}, "country_name": {"title": "Country Name", "type": "string"}, "country_language": {"title": "Country Language", "type": "string"}, "country_phone": {"title": "Country Phone", "type": "string"}, "currency_id": {"title": "Currency Id", "type": "integer"}}}, "MtrCustomerClassGetSchema": {"title": "MtrCustomerClassGetSchema", "type": "object", "properties": {"customer_class_code": {"title": "Customer Class Code", "type": "string"}, "customer_class_name": {"title": "Customer Class Name", "type": "string"}}}, "MtrCustomerTypeFlagListGetSchema": {"title": "MtrCustomerTypeFlagListGetSchema", "type": "object", "properties": {"customer_type_flag_list_code": {"title": "Customer Type Flag List Code", "type": "string"}, "customer_type_flag_list_name": {"title": "Customer Type Flag List Name", "type": "string"}}}, "MtrFinanceAreaGetSchema": {"title": "MtrFinanceAreaGetSchema", "type": "object", "properties": {"finance_area_code": {"title": "Finance Area Code", "type": "string"}, "finance_area_name": {"title": "Finance Area Name", "type": "string"}}}, "MtrGeneralLedgerAccountTypeGetSchema": {"title": "MtrGeneralLedgerAccountTypeGetSchema", "type": "object", "properties": {"general_ledger_account_type_code": {"title": "General Ledger Account Type Code", "type": "string"}, "general_ledger_account_type_name": {"title": "General Ledger Account Type Name", "type": "string"}}}, "MtrGeneralLedgerDimensionTypeGetSchema": {"title": "MtrGeneralLedgerDimensionTypeGetSchema", "type": "object", "properties": {"general_ledger_dimension_type_code": {"title": "General Ledger Dimension Type Code", "type": "string"}, "general_ledger_dimension_type_name": {"title": "General Ledger Dimension Type Name", "type": "string"}}}, "MtrGeneralLedgerProcessGetSchema": {"title": "MtrGeneralLedgerProcessGetSchema", "type": "object", "properties": {"general_ledger_process_code": {"title": "General Ledger Process Code", "type": "string"}, "general_ledger_process_name": {"title": "General Ledger Process Name", "type": "string"}}}, "MtrIncentiveLevelGetSchema": {"title": "MtrIncentiveLevelGetSchema", "type": "object", "properties": {"incentive_level_code": {"title": "Incentive Level Code", "type": "string"}, "incentive_level_name": {"title": "Incentive Level Name", "type": "string"}, "incentive_level_variable": {"title": "Incentive Level Variable", "type": "string"}}}, "MtrItemGroupGetSchema": {"title": "MtrItemGroupGetSchema", "type": "object", "properties": {"item_group_code": {"title": "Item Group Code", "type": "string"}, "item_group_name": {"title": "Item Group Name", "type": "string"}}}, "MtrJobPositionGetSchema": {"title": "MtrJobPositionGetSchema", "type": "object", "properties": {"job_position_code": {"title": "Job Position Code", "type": "string"}, "job_position_name": {"title": "Job Position Name", "type": "string"}}}, "MtrJobTitleGetSchema": {"title": "MtrJobTitleGetSchema", "type": "object", "properties": {"job_title_code": {"title": "Job Title Code", "type": "string"}, "job_title_name": {"title": "Job Title Name", "type": "string"}}}, "MtrLineTypeGetSchema": {"title": "MtrLineTypeGetSchema", "type": "object", "properties": {"line_type_code": {"title": "Line Type Code", "type": "string"}, "line_type_name": {"title": "Line Type Name", "type": "string"}}}, "MtrLoggingGetSchema": {"title": "MtrLoggingGetSchema", "type": "object", "properties": {"created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "created_by": {"title": "Created By", "type": "string"}, "changed_at": {"title": "Changed At", "type": "string", "format": "date-time"}, "changed_by": {"title": "Changed By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}, "ip_address": {"title": "Ip Address", "type": "string"}}}, "MtrLoggingPostSchema": {"title": "MtrLoggingPostSchema", "type": "object", "properties": {"created_by": {"title": "Created By", "type": "string"}, "hitted_api": {"title": "Hitted Api", "type": "string"}, "http_request": {"title": "Http Request", "type": "string"}, "http_response": {"title": "Http Response", "type": "string"}, "data_context": {"title": "Data Context", "type": "string"}, "triggered_menu": {"title": "Triggered Menu", "type": "string"}}}, "MtrPriceListCodeGetSchema": {"title": "MtrPriceListCodeGetSchema", "type": "object", "properties": {"price_list_code": {"title": "Price List Code", "type": "string"}, "price_list_code_name": {"title": "Price List Code Name", "type": "string"}}}, "MtrProvinceRequest": {"title": "MtrProvinceRequest", "required": ["province_code", "province_name", "country_id"], "type": "object", "properties": {"province_code": {"title": "Province Code", "type": "string"}, "province_name": {"title": "Province Name", "type": "string"}, "country_id": {"title": "Country Id", "type": "integer"}}}, "MtrReferenceTypePurchaseRequestGetSchema": {"title": "MtrReferenceTypePurchaseRequestGetSchema", "type": "object", "properties": {"reference_type_purchase_request_code": {"title": "Reference Type Purchase Request Code", "type": "string"}, "reference_type_purchase_request_name": {"title": "Reference Type Purchase Request Name", "type": "string"}}}, "MtrRegionRequest": {"title": "MtrRegionRequest", "required": ["region_code", "region_name", "user_id"], "type": "object", "properties": {"region_code": {"title": "Region Code", "type": "string"}, "region_name": {"title": "Region Name", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}}}, "MtrSkillLevelCodeGetSchema": {"title": "MtrSkillLevelCodeGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSkillLevelGetSchema": {"title": "MtrSkillLevelGetSchema", "type": "object", "properties": {"skill_level_code": {"title": "Skill Level Code", "type": "string"}}}, "MtrSourceApprovalDocumentGetSchema": {"title": "MtrSourceApprovalDocumentGetSchema", "type": "object", "properties": {"source_approval_document_code": {"title": "Source Approval Document Code", "type": "string"}, "source_approval_document_name": {"title": "Source Approval Document Name", "type": "string"}}}, "MtrSpecialMovementGetSchema": {"title": "MtrSpecialMovementGetSchema", "type": "object", "properties": {"special_movement_code": {"title": "Special Movement Code", "type": "string"}, "special_movement_name": {"title": "Special Movement Name", "type": "string"}}}, "MtrSubstituteTypeGetSchema": {"title": "MtrSubstituteTypeGetSchema", "type": "object", "properties": {"substitute_type_code": {"title": "Substitute Type Code", "type": "string"}, "substitute_type_name": {"title": "Substitute Type Name", "type": "string"}}}, "MtrTaxFormatTypeGetSchema": {"title": "MtrTaxFormatTypeGetSchema", "type": "object", "properties": {"tax_format_type_code": {"title": "Tax Format Type Code", "type": "string"}, "tax_format_type_name": {"title": "Tax Format Type Name", "type": "string"}}}, "MtrTaxOutTransactionGetSchema": {"title": "MtrTaxOutTransactionGetSchema", "type": "object", "properties": {"tax_out_transaction_code": {"title": "Tax Out Transaction Code", "type": "string"}, "tax_out_transaction_name": {"title": "Tax Out Transaction Name", "type": "string"}}}, "MtrTransactionTypeCashManagementOutGetSchema": {"title": "MtrTransactionTypeCashManagementOutGetSchema", "type": "object", "properties": {"transaction_type_cash_management_out_code": {"title": "Transaction Type Cash Management Out Code", "type": "string"}, "transaction_type_cash_management_out_name": {"title": "Transaction Type Cash Management Out Name", "type": "string"}}}, "MtrTransactionTypeGetSchema": {"title": "MtrTransactionTypeGetSchema", "type": "object", "properties": {"transaction_type_code": {"title": "Transaction Type Code", "type": "string"}, "transaction_type_name": {"title": "Transaction Type Name", "type": "string"}}}, "MtrUnitOfMeasurementItemGetSchema": {"title": "MtrUnitOfMeasurementItemGetSchema", "type": "object", "properties": {"unit_of_measurement_item_code": {"title": "Unit Of Measurement Item Code", "type": "string"}, "unit_of_measurement_item_name": {"title": "Unit Of Measurement Item Name", "type": "string"}}}, "MtrVoidTransactionGetSchema": {"title": "MtrVoidTransactionGetSchema", "type": "object", "properties": {"void_transaction_code": {"title": "Void Transaction Code", "type": "string"}, "void_transaction_name": {"title": "Void Transaction Name", "type": "string"}}}, "MtrWorkOrderTransactionTypeGetSchema": {"title": "MtrWorkOrderTransactionTypeGetSchema", "type": "object", "properties": {"work_order_transaction_type_code": {"title": "Work Order Transaction Type Code", "type": "string"}, "work_order_transaction_type_name": {"title": "Work Order Transaction Type Name", "type": "string"}}}, "MtrWorkOrderTypeGetSchema": {"title": "MtrWorkOrderTypeGetSchema", "type": "object", "properties": {"work_order_type_code": {"title": "Work Order Type Code", "type": "string"}, "work_order_type_name": {"title": "Work Order Type Name", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}}}
{"asctime": "2023-06-14 13:48:16,619", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 48, 16, 482370), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '404', 'data_context': '[]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 48, 16, 482370), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '404', 'data_context': '[]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:48:16,716", "process": 16052, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "5532862f-db1b-42f0-a092-ab203c7723a3", "request": {"method": "GET", "path": "/api/general/get-adjustment-reasons", "ip": "127.0.0.1"}, "response": {"status": "failed", "status_code": 404, "time_taken": 0.2870126999914646, "body": {"detail": "Nothing matching request"}}}
{"asctime": "2023-06-14 13:49:46,497", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 46, 468387), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'create-adjustment-reason', 'http_request': 'POST', 'http_response': '201', 'data_context': '<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AA58D790>', 'triggered_menu': 'create-adjustment-reason', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 46, 468387), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'create-adjustment-reason', 'http_request': 'POST', 'http_response': '201', 'data_context': '<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AA58D790>', 'triggered_menu': 'create-adjustment-reason', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:46,548", "process": 16052, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "b5b162b3-8000-4067-b1a6-0331fd347a50", "request": {"method": "POST", "path": "/api/general/create-adjustment-reason", "ip": "127.0.0.1", "body": {"adjustment_reason_code": "string", "adjustment_reason_name": "string"}}, "response": {"status": "successful", "status_code": 201, "time_taken": 0.11969579997821711, "body": {"messages": "Request created", "payloads": {"adjustment_reason_code": "string", "adjustment_reason_name": "string", "is_active": true, "adjustment_reason_id": 1}}}}
{"asctime": "2023-06-14 13:49:57,709", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 687952), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 687952), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:57,787", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 770678), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 770678), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:57,835", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 818745), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 818745), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:57,882", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 864518), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 864518), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:57,922", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 907385), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 907385), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:57,970", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 954656), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 954656), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,017", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 995403), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 57, 995403), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,050", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 37558), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 37558), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,088", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 69311), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 69311), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,123", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 108354), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 108354), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,182", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 144574), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 144574), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,226", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 204560), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 204560), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,266", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 245146), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 245146), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,318", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 287652), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 287652), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,362", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 345649), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 345649), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,400", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 385737), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 385737), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,442", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 426461), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 426461), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,489", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 462763), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 462763), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,535", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 516393), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 516393), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,574", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 559401), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 559401), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,627", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 600051), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 600051), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,658", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 645504), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 645504), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,712", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 679917), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 679917), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,745", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 734555), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 734555), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,944", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 768362), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 768362), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:58,988", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 972772), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 58, 972772), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,142", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 11313), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 11313), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,211", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 174806), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 174806), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,351", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 236697), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 236697), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,410", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 387416), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 387416), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,485", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 438041), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 438041), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,641", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 507613), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 507613), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,745", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 672431), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 672431), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,809", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 775194), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 775194), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,904", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 832751), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 832751), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:49:59,940", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 926338), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 926338), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,004", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 965324), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 49, 59, 965324), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,071", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 38343), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 38343), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,122", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 94740), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 94740), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,258", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 152659), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 152659), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,395", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 278907), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 278907), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,455", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 438515), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 438515), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,585", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 481995), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 481995), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,629", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 612398), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 612398), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,786", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 654318), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 654318), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,836", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 810379), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 810379), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,872", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 856815), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 856815), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,951", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 924459), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 924459), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:00,995", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 974438), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 0, 974438), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,026", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 11668), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 11668), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,076", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 46225), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 46225), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,120", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 97146), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 97146), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,151", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 137095), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 137095), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,189", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 170543), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 170543), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,224", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 210358), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 210358), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,272", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 250123), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 250123), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,308", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 294693), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 294693), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,352", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 333533), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 333533), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,390", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 372482), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 372482), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,425", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 411430), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 411430), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,466", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 448673), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 448673), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,512", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 493734), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 493734), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,552", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 537367), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 537367), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,594", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 574417), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 574417), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,635", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 618541), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 618541), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,675", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 657516), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 657516), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,707", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 694607), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 694607), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,744", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 731329), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 731329), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,785", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 769420), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 769420), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,824", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 809696), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 809696), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,857", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 842328), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 842328), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,895", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 876425), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 876425), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,930", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 918816), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 918816), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:01,971", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 950911), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 950911), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,007", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 992668), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 1, 992668), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,041", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 27358), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 27358), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,082", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 63574), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 63574), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,127", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 111532), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 111532), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,184", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 153995), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 153995), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,230", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 217557), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 217557), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,262", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 248645), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 248645), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,298", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 284284), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 284284), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,337", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 323722), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 323722), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,418", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 392459), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 392459), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,454", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 438698), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 438698), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,488", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 472390), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 472390), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,520", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 507392), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 507392), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,555", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 542162), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 542162), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,603", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 576742), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 576742), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,643", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 629192), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 629192), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,685", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 665713), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 665713), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,722", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 707312), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 707312), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,752", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 740704), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 740704), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,791", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 773594), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 773594), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,827", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 811382), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 811382), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,860", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 849030), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 849030), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,900", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 879620), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 879620), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,937", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 922440), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 922440), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,973", "process": 16052, "levelname": "ERROR", "name": "logging_lib", "module": "logging_lib", "funcName": "_execute_request", "lineno": 144, "path": "/api/general/create-logging", "method": "POST", "reason": "(pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 958938), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)", "exc_info": "Traceback (most recent call last):\n  File \"src\\pymssql\\_pymssql.pyx\", line 461, in pymssql._pymssql.Cursor.execute\n  File \"src\\pymssql\\_mssql.pyx\", line 1087, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1118, in pymssql._mssql.MSSQLConnection.execute_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1251, in pymssql._mssql.MSSQLConnection.format_and_run_query\n  File \"src\\pymssql\\_mssql.pyx\", line 1789, in pymssql._mssql.check_cancel_and_raise\n  File \"src\\pymssql\\_mssql.pyx\", line 1835, in pymssql._mssql.raise_MSSQLDatabaseException\npymssql._mssql.MSSQLDatabaseException: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File \"src\\pymssql\\_pymssql.pyx\", line 476, in pymssql._pymssql.Cursor.execute\npymssql._pymssql.ProgrammingError: (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\Indomobil\\Projects\\microservice\\general-master-py-latest\\app\\logging_lib.py\", line 137, in _execute_request\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 84, in call_next\n    raise app_exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 70, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\n    raise exc\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\n    await self.app(scope, receive, sender)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 222, in __aexit__\n    await self.gen.athrow(typ, value, traceback)\n  File \"C:\\Users\\richardo.wijaya\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\fastapi\\concurrency.py\", line 36, in contextmanager_in_threadpool\n    raise e\nsqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b\"Invalid column name 'hitted_api'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\nDB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")\n[SQL: INSERT INTO mtr_logging (is_active, created_at, created_by, changed_at, changed_by, hitted_api, http_request, http_response, data_context, triggered_menu, ip_address) OUTPUT inserted.logging_id VALUES (%(is_active)s, %(created_at)s, %(created_by)s, %(changed_at)s, %(changed_by)s, %(hitted_api)s, %(http_request)s, %(http_response)s, %(data_context)s, %(triggered_menu)s, %(ip_address)s)]\n[parameters: {'is_active': 1, 'created_at': datetime.datetime(2023, 6, 14, 13, 50, 2, 958938), 'created_by': '50650', 'changed_at': False, 'changed_by': False, 'hitted_api': 'get-adjustment-reasons', 'http_request': 'GET', 'http_response': '200', 'data_context': '[<models.AdjustmentReasonModel.MtrAdjustmentReason object at 0x000001F0AC0B9E50>]', 'triggered_menu': 'get-adjustment-reasons', 'ip_address': '127.0.0.1'}]\n(Background on this error at: https://sqlalche.me/e/14/f405)"}
{"asctime": "2023-06-14 13:50:02,999", "process": 16052, "levelname": "INFO", "name": "logging_lib", "module": "logging_lib", "funcName": "dispatch", "lineno": 39, "X-API-REQUEST-ID": "a8a4d9f8-6d15-423d-939f-6a44d1dc8e2f", "request": {"method": "GET", "path": "/api/general/get-adjustment-reasons", "ip": "127.0.0.1"}, "response": {"status": "successful", "status_code": 200, "time_taken": 5.316833399992902, "body": {"messages": "Request fulfilled, Here's the response", "payloads": [{"adjustment_reason_code": "string", "adjustment_reason_name": "string", "is_active": true, "adjustment_reason_id": 1}]}}}
